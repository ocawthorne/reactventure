{"ast":null,"code":"export const fetchEntitiesSuccess = allEntities => {\n  return {\n    type: \"FETCH_ENTITIES_SUCCESS\",\n    allEntities\n  };\n};\nexport const fetchEntityInteractionsSuccess = allEntityInteractions => {\n  return {\n    type: \"FETCH_ENTITY_INTERACTIONS_SUCCESS\",\n    allEntityInteractions\n  };\n};\nexport const getAllEntities = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_ENTITIES'\n    });\n    return fetch(\"http://localhost:3000/api/v1/entities\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Access-Control-Allow-Origin\": true\n      }\n    }).then(r => r.json()).then(entities => {\n      dispatch(fetchEntitiesSuccess(entities));\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  };\n};\nexport const getAllEntityInteractions = () => {\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_ENTITIES'\n    });\n    return fetch(\"http://localhost:3000/api/v1/entity_interactions\", {\n      credentials: \"include\",\n      method: \"GET\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": true\n      }\n    }).then(r => r.json()).then(ei => {\n      dispatch(fetchEntityInteractionsSuccess(ei));\n    }).catch(error => {\n      console.log(\"Error: \", error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/actions/entities.js"],"names":["fetchEntitiesSuccess","allEntities","type","fetchEntityInteractionsSuccess","allEntityInteractions","getAllEntities","dispatch","fetch","credentials","method","headers","then","r","json","entities","catch","error","console","log","getAllEntityInteractions","ei"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAIC,WAAD,IAAiB;AAClD,SAAO;AACJC,IAAAA,IAAI,EAAE,wBADF;AAEJD,IAAAA;AAFI,GAAP;AAIF,CALM;AAOP,OAAO,MAAME,8BAA8B,GAAIC,qBAAD,IAA2B;AACtE,SAAO;AACJF,IAAAA,IAAI,EAAE,mCADF;AAEJE,IAAAA;AAFI,GAAP;AAIF,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAM;AACjC,SAAOC,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WACGK,KAAK,CAAC,uCAAD,EAA0C;AAC/CC,MAAAA,WAAW,EAAE,SADkC;AAE/CC,MAAAA,MAAM,EAAE,KAFuC;AAG/CC,MAAAA,OAAO,EAAE;AACN,kBAAU,kBADJ;AAEN,uCAA+B;AAFzB;AAHsC,KAA1C,CAAL,CAQCC,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMG,QAAQ,IAAI;AACfR,MAAAA,QAAQ,CAACN,oBAAoB,CAACc,QAAD,CAArB,CAAR;AACF,KAXD,EAYCC,KAZD,CAYOC,KAAK,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACC,KAdJ,CADH;AAiBF,GAnBD;AAoBF,CArBM;AAuBP,OAAO,MAAMG,wBAAwB,GAAG,MAAM;AAC3C,SAAOb,QAAQ,IAAI;AAChBA,IAAAA,QAAQ,CAAC;AAACJ,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACA,WACGK,KAAK,CAAC,kDAAD,EAAqD;AAC1DC,MAAAA,WAAW,EAAE,SAD6C;AAE1DC,MAAAA,MAAM,EAAE,KAFkD;AAG1DC,MAAAA,OAAO,EAAE;AACN,wBAAgB,kBADV;AAEN,uCAA+B;AAFzB;AAHiD,KAArD,CAAL,CAQCC,IARD,CAQMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EARX,EASCF,IATD,CASMS,EAAE,IAAI;AACTd,MAAAA,QAAQ,CAACH,8BAA8B,CAACiB,EAAD,CAA/B,CAAR;AACC,KAXJ,EAYCL,KAZD,CAYOC,KAAK,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,KAAvB;AACC,KAdJ,CADH;AAiBF,GAnBD;AAoBF,CArBM","sourcesContent":["export const fetchEntitiesSuccess = (allEntities) => {\n   return {\n      type: \"FETCH_ENTITIES_SUCCESS\",\n      allEntities\n   }\n} \n\nexport const fetchEntityInteractionsSuccess = (allEntityInteractions) => {\n   return {\n      type: \"FETCH_ENTITY_INTERACTIONS_SUCCESS\",\n      allEntityInteractions\n   }\n} \n\nexport const getAllEntities = () => {\n   return dispatch => {\n      dispatch({type: 'LOADING_ENTITIES'})\n      return (\n         fetch(\"http://localhost:3000/api/v1/entities\", {\n         credentials: \"include\",\n         method: \"GET\",\n         headers: {\n            \"Accept\": \"application/json\",\n            \"Access-Control-Allow-Origin\": true\n         }\n         })\n         .then(r => r.json())\n         .then(entities => {\n            dispatch(fetchEntitiesSuccess(entities));\n         })\n         .catch(error => {\n            console.log(\"Error: \", error);\n            })\n      )\n   }\n}\n\nexport const getAllEntityInteractions = () => {\n   return dispatch => {\n      dispatch({type: 'LOADING_ENTITIES'})\n      return (\n         fetch(\"http://localhost:3000/api/v1/entity_interactions\", {\n         credentials: \"include\",\n         method: \"GET\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": true\n         }\n         })\n         .then(r => r.json())\n         .then(ei => {\n            dispatch(fetchEntityInteractionsSuccess(ei));\n            })\n         .catch(error => {\n            console.log(\"Error: \", error);\n            })\n      )\n   }\n}\n"]},"metadata":{},"sourceType":"module"}