{"ast":null,"code":"var _jsxFileName = \"/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateEntryField } from '../actions/entryField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EntryField extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      const command = event.target.value;\n      const currentCommand = Object.assign({}, this.props.command, {\n        command: command.toLowerCase()\n      });\n      this.props.updateEntryField(currentCommand);\n      debugger;\n      console.log(currentCommand);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.determineInputType(this.props.command);\n      console.log('Submit.');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"entry-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        className: \"entry text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Develop the plot...\",\n        className: \"entry submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    command: state.command\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    commandDispatch: () => dispatch(updateEntryField)\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryField);","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js"],"names":["React","Component","connect","updateEntryField","EntryField","handleChange","event","command","target","value","currentCommand","Object","assign","props","toLowerCase","console","log","handleSubmit","preventDefault","determineInputType","render","mapStateToProps","state","mapDispatchToProps","dispatch","commandDispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,uBAAjC;;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAEhCI,YAFgC,GAEhBC,KAAD,IAAW;AACvB,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,YAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWN,OAA7B,EAAsC;AAC1DA,QAAAA,OAAO,EAAEA,OAAO,CAACO,WAAR;AADiD,OAAtC,CAAvB;AAIA,WAAKD,KAAL,CAAWV,gBAAX,CAA4BO,cAA5B;AACA;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYN,cAAZ;AACF,KAX+B;;AAAA,SAahCO,YAbgC,GAahBX,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACY,cAAN;AACA,WAAKL,KAAL,CAAWM,kBAAX,CAA8B,KAAKN,KAAL,CAAWN,OAAzC;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,KAjB+B;AAAA;;AAmBhCI,EAAAA,MAAM,GAAG;AACN,wBACG;AAAM,MAAA,QAAQ,EAAE,KAAKH,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA,8BACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKZ,YAAlC;AAAgD,QAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAiD,QAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAMF;;AA1B+B;;AA6BnC,MAAMgB,eAAe,GAAGC,KAAK,IAAI;AAC9B,SAAO;AACLf,IAAAA,OAAO,EAAEe,KAAK,CAACf;AADV,GAAP;AAGF,CAJD;;AAMA,MAAMgB,kBAAkB,GAAGC,QAAQ,IAAI;AACpC,SAAO;AACJC,IAAAA,eAAe,EAAE,MAAMD,QAAQ,CAACrB,gBAAD;AAD3B,GAAP;AAGF,CAJD;;AAMA,eAAeD,OAAO,CAACmB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CnB,UAA7C,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport { updateEntryField } from '../actions/entryField'\n\nclass EntryField extends Component {\n\n   handleChange = (event) => {\n      const command = event.target.value\n      const currentCommand = Object.assign({}, this.props.command, {\n         command: command.toLowerCase()\n      })\n\n      this.props.updateEntryField(currentCommand)\n      debugger\n      console.log(currentCommand)\n   }\n\n   handleSubmit = (event) => {\n      event.preventDefault()\n      this.props.determineInputType(this.props.command);\n      console.log('Submit.')\n   }\n\n   render() {\n      return (\n         <form onSubmit={this.handleSubmit} className=\"entry-form\">\n            <input type=\"text\" onChange={this.handleChange} className=\"entry text\" />\n            <input type=\"submit\" value=\"Develop the plot...\" className=\"entry submit\" />\n         </form>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n     command: state.command\n   }\n}\n\nconst mapDispatchToProps = dispatch => {\n   return {\n      commandDispatch: () => dispatch(updateEntryField)\n   }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EntryField);\n"]},"metadata":{},"sourceType":"module"}