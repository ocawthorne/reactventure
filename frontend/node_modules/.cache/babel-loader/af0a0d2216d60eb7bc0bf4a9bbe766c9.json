{"ast":null,"code":"var _jsxFileName = \"/home/loots/code/5-phase/reactventure/frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport EntryField from \"./containers/EntryField\";\nimport SideBar from './components/SideBar';\nimport History from './containers/History';\nimport { getAllEntities } from './actions/entities';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  componentDidMount() {\n    console.log('App mounted, fetching all entities.');\n    this.props.getAllEntities();\n    this.props.getAllEntityInteractions();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(History, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EntryField, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    allEntities: state.commands.allEntities,\n    allEntityInteractions: state.commands.allEntityInteractions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAllEntities,\n  getAllEntityInteractions\n})(App);","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/App.js"],"names":["React","Component","connect","EntryField","SideBar","History","getAllEntities","App","componentDidMount","console","log","props","getAllEntityInteractions","render","mapStateToProps","state","allEntities","commands","allEntityInteractions"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,SAASC,cAAT,QAA+B,oBAA/B;;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAE1BO,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACA,SAAKC,KAAL,CAAWL,cAAX;AACA,SAAKK,KAAL,CAAWC,wBAAX;AACF;;AAEAC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AAlByB;;AAqB5B,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACJC,IAAAA,WAAW,EAAED,KAAK,CAACE,QAAN,CAAeD,WADxB;AAEJE,IAAAA,qBAAqB,EAAEH,KAAK,CAACE,QAAN,CAAeC;AAFlC,GAAP;AAID,CALD;;AAOA,eAAehB,OAAO,CAACY,eAAD,EAAkB;AAAER,EAAAA,cAAF;AAAkBM,EAAAA;AAAlB,CAAlB,CAAP,CAAuEL,GAAvE,CAAf","sourcesContent":["import React, {Component} from \"react\";\nimport { connect } from 'react-redux';\n\nimport './App.css';\nimport EntryField from \"./containers/EntryField\";\nimport SideBar from './components/SideBar'\nimport History from './containers/History'\n\nimport { getAllEntities } from './actions/entities'\n\n\nclass App extends Component {\n\n  componentDidMount() {\n    console.log('App mounted, fetching all entities.')\n    this.props.getAllEntities()\n    this.props.getAllEntityInteractions()\n }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <SideBar />\n        <div className=\"App-header\">\n          <History />\n          <EntryField />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n     allEntities: state.commands.allEntities,\n     allEntityInteractions: state.commands.allEntityInteractions\n  }\n}\n\nexport default connect(mapStateToProps, { getAllEntities, getAllEntityInteractions })(App)\n"]},"metadata":{},"sourceType":"module"}