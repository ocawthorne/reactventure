{"ast":null,"code":"var _jsxFileName = \"/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { updateEntryField, resetEntryField } from '../actions/updateEntryField';\nimport { determineInputType } from '../actions/commands';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EntryField extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      input: '',\n      command_type: '',\n      //? This will be either GET, USE, COMBINE.\n      entity_1: '',\n      entity_2: '' //? Only referenced when two objects are called in one command\n\n    };\n\n    this.handleChange = event => {\n      const command = event.target.value;\n      const currentCommand = Object.assign({}, this.props.commandData, {\n        command: command.toLowerCase()\n      });\n      this.props.updateEntryField(currentCommand); // console.log(currentCommand)\n\n      debugger;\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.determineInputType(this.props.command);\n      console.log('Submit.');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"entry-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        className: \"entry text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Develop the plot...\",\n        className: \"entry submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    command: state.command\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updateEntryField,\n  resetEntryField,\n  determineInputType\n})(EntryField);","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js"],"names":["React","Component","connect","updateEntryField","resetEntryField","determineInputType","EntryField","state","input","command_type","entity_1","entity_2","handleChange","event","command","target","value","currentCommand","Object","assign","props","commandData","toLowerCase","handleSubmit","preventDefault","console","log","render","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,eAA3B,QAAkD,6BAAlD;AACA,SAASC,kBAAT,QAAmC,qBAAnC;;;AAEA,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEhCM,KAFgC,GAExB;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,YAAY,EAAE,EAFT;AAEa;AAClBC,MAAAA,QAAQ,EAAE,EAHL;AAILC,MAAAA,QAAQ,EAAE,EAJL,CAIQ;;AAJR,KAFwB;;AAAA,SAShCC,YATgC,GAShBC,KAAD,IAAW;AACvB,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AACA,YAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWC,WAA7B,EAA0C;AAC9DP,QAAAA,OAAO,EAAEA,OAAO,CAACQ,WAAR;AADqD,OAA1C,CAAvB;AAIA,WAAKF,KAAL,CAAWjB,gBAAX,CAA4Bc,cAA5B,EANuB,CAOvB;;AACA;AACF,KAlB+B;;AAAA,SAoBhCM,YApBgC,GAoBhBV,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACW,cAAN;AACA,WAAKJ,KAAL,CAAWf,kBAAX,CAA8B,KAAKe,KAAL,CAAWN,OAAzC;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACF,KAxB+B;AAAA;;AA0BhCC,EAAAA,MAAM,GAAG;AACN,wBACG;AAAM,MAAA,QAAQ,EAAE,KAAKJ,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA,8BACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKX,YAAlC;AAAgD,QAAA,SAAS,EAAC;AAA1D;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAiD,QAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAMF;;AAjC+B;;AAoCnC,MAAMgB,eAAe,GAAGrB,KAAK,IAAI;AAC9B,SAAO;AACLO,IAAAA,OAAO,EAAEP,KAAK,CAACO;AADV,GAAP;AAGD,CAJF;;AAMA,eAAeZ,OAAO,CAAC0B,eAAD,EAAkB;AAAEzB,EAAAA,gBAAF;AAAoBC,EAAAA,eAApB;AAAqCC,EAAAA;AAArC,CAAlB,CAAP,CAAoFC,UAApF,CAAf","sourcesContent":["import React, {Component} from 'react'\nimport { connect } from 'react-redux';\nimport { updateEntryField, resetEntryField } from '../actions/updateEntryField'\nimport { determineInputType } from '../actions/commands'\n\nclass EntryField extends Component {\n\n   state = {\n      input: '',\n      command_type: '', //? This will be either GET, USE, COMBINE.\n      entity_1: '',\n      entity_2: '' //? Only referenced when two objects are called in one command\n   }\n\n   handleChange = (event) => {\n      const command = event.target.value\n      const currentCommand = Object.assign({}, this.props.commandData, {\n         command: command.toLowerCase()\n      })\n\n      this.props.updateEntryField(currentCommand)\n      // console.log(currentCommand)\n      debugger\n   }\n\n   handleSubmit = (event) => {\n      event.preventDefault()\n      this.props.determineInputType(this.props.command);\n      console.log('Submit.')\n   }\n\n   render() {\n      return (\n         <form onSubmit={this.handleSubmit} className=\"entry-form\">\n            <input type=\"text\" onChange={this.handleChange} className=\"entry text\" />\n            <input type=\"submit\" value=\"Develop the plot...\" className=\"entry submit\" />\n         </form>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n     command: state.command\n   }\n }\n\nexport default connect(mapStateToProps, { updateEntryField, resetEntryField, determineInputType })(EntryField);\n"]},"metadata":{},"sourceType":"module"}