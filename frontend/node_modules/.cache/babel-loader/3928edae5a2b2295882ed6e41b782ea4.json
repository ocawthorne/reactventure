{"ast":null,"code":"const defaultState = {\n  currentUser: '',\n  //? When a login is prompted, this value will be the user ID.\n  userObjects: [],\n  //? Starting empty at the beginning of the game, this is populated through 'get x' commands.\n  userHistory: [],\n  //? This array stores every piece of narrative, feedback, and command that the user has prompted. This is rendered to the History container.\n  command: '' //? This is modified when the user types in an input. When executed, this command is split into its respective words for further processing.\n\n}; //! Specifically: \"get x\", \"use x on y\", \"open x\", and so on.\n\nconst commandReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATED_COMMAND':\n      return { ...state,\n        command: action.command\n      };\n\n    case 'SUBMITTED_COMMAND':\n      switch (action.command.split(\" \")[0]) {\n        case 'get':\n          console.log('This is a get!');\n          return { ...state,\n            command: state.command\n          };\n\n        case 'use':\n          console.log('This is a use!');\n          return { ...state,\n            command: state.command\n          };\n\n        default:\n          console.log('This is default.');\n          break;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default commandReducer;","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/reducers/commandReducer.js"],"names":["defaultState","currentUser","userObjects","userHistory","command","commandReducer","state","action","type","split","console","log"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AACE;AACpBC,EAAAA,WAAW,EAAE,EAFK;AAEE;AACpBC,EAAAA,WAAW,EAAE,EAHK;AAGE;AACpBC,EAAAA,OAAO,EAAE,EAJS,CAIE;;AAJF,CAArB,C,CAKuB;;AAGvB,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACN,YAAP,EAAqBO,MAArB,KAAgC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,iBAAL;AACG,aAAO,EAAC,GAAGF,KAAJ;AAAWF,QAAAA,OAAO,EAAEG,MAAM,CAACH;AAA3B,OAAP;;AACH,SAAK,mBAAL;AACG,cAAOG,MAAM,CAACH,OAAP,CAAeK,KAAf,CAAqB,GAArB,EAA0B,CAA1B,CAAP;AACG,aAAK,KAAL;AACGC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAO,EAAC,GAAGL,KAAJ;AAAWF,YAAAA,OAAO,EAAEE,KAAK,CAACF;AAA1B,WAAP;;AACH,aAAK,KAAL;AACGM,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,iBAAO,EAAC,GAAGL,KAAJ;AAAWF,YAAAA,OAAO,EAAEE,KAAK,CAACF;AAA1B,WAAP;;AACH;AACGM,UAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;AATN;;AAWH;AACG,aAAOL,KAAP;AAhBN;AAmBF,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["const defaultState = {\n   currentUser: '',    //? When a login is prompted, this value will be the user ID.\n   userObjects: [],    //? Starting empty at the beginning of the game, this is populated through 'get x' commands.\n   userHistory: [],    //? This array stores every piece of narrative, feedback, and command that the user has prompted. This is rendered to the History container.\n   command: ''         //? This is modified when the user types in an input. When executed, this command is split into its respective words for further processing.\n}                      //! Specifically: \"get x\", \"use x on y\", \"open x\", and so on.\n\n\nconst commandReducer = (state=defaultState, action) => {\n   switch (action.type) {\n      case 'UPDATED_COMMAND':\n         return {...state, command: action.command}\n      case 'SUBMITTED_COMMAND':\n         switch(action.command.split(\" \")[0]) {\n            case 'get':\n               console.log('This is a get!')\n               return {...state, command: state.command}\n            case 'use':\n               console.log('This is a use!')\n               return {...state, command: state.command}\n            default:\n               console.log('This is default.')\n               break\n         }\n      default:\n         return state\n   }\n   \n}\n\nexport default commandReducer\n"]},"metadata":{},"sourceType":"module"}