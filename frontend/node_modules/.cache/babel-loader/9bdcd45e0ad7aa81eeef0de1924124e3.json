{"ast":null,"code":"const defaultState = {\n  currentUser: '',\n  //? When a login is prompted, this value will be the user ID.\n  userObjects: [],\n  //? Starting empty at the beginning of the game, this is populated through 'get x' commands.\n  userHistory: [],\n  //? This array stores every piece of narrative, feedback, and command that the user has prompted. This is rendered to the History container.\n  command: '',\n  //? This is modified when the user types in an input. When executed, this command is split into its respective words for further processing.\n  //! Specifically: \"get x\", \"use x on y\", \"open x\", and so on.\n  executed: false\n};\n\nconst commandReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'UPDATED_COMMAND':\n      return { ...state,\n        command: action.command\n      };\n\n    case 'SUBMITTED_COMMAND':\n      return { ...state,\n        command: state.command,\n        executed: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default commandReducer;","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/reducers/commandReducer.js"],"names":["defaultState","currentUser","userObjects","userHistory","command","executed","commandReducer","state","action","type"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AACA;AAClBC,EAAAA,WAAW,EAAE,EAFK;AAEA;AAClBC,EAAAA,WAAW,EAAE,EAHK;AAGA;AAClBC,EAAAA,OAAO,EAAE,EAJS;AAIA;AACA;AAClBC,EAAAA,QAAQ,EAAE;AANQ,CAArB;;AASA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAACP,YAAP,EAAqBQ,MAArB,KAAgC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACG,SAAK,iBAAL;AACG,aAAO,EAAC,GAAGF,KAAJ;AAAWH,QAAAA,OAAO,EAAEI,MAAM,CAACJ;AAA3B,OAAP;;AACH,SAAK,mBAAL;AACG,aAAO,EAAC,GAAGG,KAAJ;AAAWH,QAAAA,OAAO,EAAEG,KAAK,CAACH,OAA1B;AAAmCC,QAAAA,QAAQ,EAAE;AAA7C,OAAP;;AACH;AACG,aAAOE,KAAP;AANN;AASF,CAVD;;AAYA,eAAeD,cAAf","sourcesContent":["const defaultState = {\n   currentUser: '',  //? When a login is prompted, this value will be the user ID.\n   userObjects: [],  //? Starting empty at the beginning of the game, this is populated through 'get x' commands.\n   userHistory: [],  //? This array stores every piece of narrative, feedback, and command that the user has prompted. This is rendered to the History container.\n   command: '',      //? This is modified when the user types in an input. When executed, this command is split into its respective words for further processing.\n                     //! Specifically: \"get x\", \"use x on y\", \"open x\", and so on.\n   executed: false,\n}\n\nconst commandReducer = (state=defaultState, action) => {\n   switch (action.type) {\n      case 'UPDATED_COMMAND':\n         return {...state, command: action.command}\n      case 'SUBMITTED_COMMAND':\n         return {...state, command: state.command, executed: true}\n      default:\n         return state\n   }\n   \n}\n\nexport default commandReducer\n"]},"metadata":{},"sourceType":"module"}