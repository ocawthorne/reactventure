{"ast":null,"code":"var _jsxFileName = \"/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { submitEntryField, updateEntryField } from '../actions/entryField'; // import { executeCommand } from '../actions/commands'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass EntryField extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleChange = event => {\n      const command = event.target.value;\n      const currentCommand = Object.assign({}, this.props.command, {\n        command: command\n      });\n      this.props.updateEntryField(currentCommand); // this.setState({\n      //    command: command\n      // })\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      this.props.dispatch(submitEntryField());\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleSubmit,\n      className: \"entry-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        value: this.state.command,\n        className: \"entry text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Develop the plot...\",\n        className: \"entry submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 10\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    command: state.command\n  };\n}; // const mapDispatchToProps = dispatch => {\n//    return {\n//       commandUpdate: () => dispatch(updateEntryField),\n//       commandSubmit: () => dispatch(submitEntryField)\n//    }\n// }\n\n\nexport default connect(mapStateToProps, {\n  submitEntryField,\n  updateEntryField\n})(EntryField);","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/containers/EntryField.js"],"names":["React","Component","connect","submitEntryField","updateEntryField","EntryField","handleChange","event","command","target","value","currentCommand","Object","assign","props","handleSubmit","preventDefault","dispatch","render","console","log","state","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,QAAmD,uBAAnD,C,CACA;;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;;AAAA,SAEhCK,YAFgC,GAEhBC,KAAD,IAAW;AACvB,YAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAA7B;AAEA,YAAMC,cAAc,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKC,KAAL,CAAWN,OAA7B,EAAsC;AAC1DA,QAAAA,OAAO,EAAEA;AADiD,OAAtC,CAAvB;AAIA,WAAKM,KAAL,CAAWV,gBAAX,CAA4BO,cAA5B,EAPuB,CASvB;AACA;AACA;AACF,KAd+B;;AAAA,SAgBhCI,YAhBgC,GAgBhBR,KAAD,IAAW;AACvBA,MAAAA,KAAK,CAACS,cAAN;AACA,WAAKF,KAAL,CAAWG,QAAX,CAAoBd,gBAAgB,EAApC;AACF,KAnB+B;AAAA;;AAqBhCe,EAAAA,MAAM,GAAG;AACNC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,wBACG;AAAM,MAAA,QAAQ,EAAE,KAAKC,YAArB;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAAA,8BACG;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAE,KAAKT,YAAlC;AAAgD,QAAA,KAAK,EAAE,KAAKe,KAAL,CAAWb,OAAlE;AAA2E,QAAA,SAAS,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,cADH,eAEG;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAiD,QAAA,SAAS,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADH;AAMF;;AA7B+B;;AAgCnC,MAAMc,eAAe,GAAGD,KAAK,IAAI;AAC9B,SAAO;AACLb,IAAAA,OAAO,EAAEa,KAAK,CAACb;AADV,GAAP;AAGF,CAJD,C,CAMA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeN,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA,gBAAF;AAAoBC,EAAAA;AAApB,CAAlB,CAAP,CAAiEC,UAAjE,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport { submitEntryField, updateEntryField } from '../actions/entryField'\n// import { executeCommand } from '../actions/commands'\n\nclass EntryField extends Component {\n\n   handleChange = (event) => {\n      const command = event.target.value\n\n      const currentCommand = Object.assign({}, this.props.command, {\n         command: command\n      })\n\n      this.props.updateEntryField(currentCommand)\n\n      // this.setState({\n      //    command: command\n      // })\n   }\n\n   handleSubmit = (event) => {\n      event.preventDefault()\n      this.props.dispatch(submitEntryField())\n   }\n\n   render() {\n      console.log(this.props)\n      return (\n         <form onSubmit={this.handleSubmit} className=\"entry-form\">\n            <input type=\"text\" onChange={this.handleChange} value={this.state.command} className=\"entry text\" />\n            <input type=\"submit\" value=\"Develop the plot...\" className=\"entry submit\" />\n         </form>\n      )\n   }\n}\n\nconst mapStateToProps = state => {\n   return {\n     command: state.command\n   }\n}\n\n// const mapDispatchToProps = dispatch => {\n//    return {\n//       commandUpdate: () => dispatch(updateEntryField),\n//       commandSubmit: () => dispatch(submitEntryField)\n//    }\n// }\n\nexport default connect(mapStateToProps, { submitEntryField, updateEntryField })(EntryField);\n"]},"metadata":{},"sourceType":"module"}