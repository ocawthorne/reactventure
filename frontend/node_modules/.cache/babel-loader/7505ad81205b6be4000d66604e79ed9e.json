{"ast":null,"code":"export const signup = userData => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        user: userData\n      })\n    }).then(res => res.json()).then(data => dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: {\n        loggedIn: true,\n        currentUser: data.user\n      }\n    }));\n  };\n};\nexport const login = (userData, history) => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/api/v1/sessions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify(userData)\n    }).then(resp => resp.json()).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        dispatch({\n          type: \"AUTH_SUCCESS\",\n          payload: {\n            loggedIn: true,\n            currentUser: data.user\n          }\n        });\n        history.push('/');\n        retrieve(data.user);\n      }\n    });\n  };\n};\nexport const checkLoggedIn = () => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/logged_in`, {\n      credentials: 'include'\n    }).then(res => res.json()).then(data => dispatch({\n      type: \"AUTH_SUCCESS\",\n      payload: {\n        loggedIn: data.logged_in,\n        currentUser: data.user\n      }\n    }));\n  };\n};\nexport const logout = () => {\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/logout`, {\n      method: \"DELETE\",\n      credentials: \"include\"\n    }).then(res => res.json()).then(data => dispatch({\n      type: \"LOGOUT_SUCCESS\"\n    }));\n  };\n};\nexport const save = (user, hist = [], inventory = [], knownObjects = ['crowbar', 'door', 'desk', 'drawer', 'paper', 'candle', 'chest'], brokenObjects = []) => {\n  console.log('Save action initiated.');\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users/${user.id}`, {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: 'include',\n      body: JSON.stringify({\n        history: hist,\n        inventory: inventory,\n        known_objects: knownObjects,\n        broken_objects: brokenObjects\n      })\n    }).then(res => res.json()).then(data => {\n      dispatch({\n        type: \"USER_HISTORY_FETCH_SUCCESS\",\n        payload: {\n          userHistory: hist,\n          userObjects: inventory,\n          knownObjects,\n          brokenObjects\n        }\n      });\n    });\n  };\n};\nexport const retrieve = user => {\n  console.log('Retrieve initiated.');\n  return dispatch => {\n    fetch(`http://localhost:3000/api/v1/users/${user.id}`, {\n      method: 'GET',\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"Access-Control-Allow-Origin\": true\n      },\n      credentials: 'include'\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      dispatch({\n        type: \"USER_HISTORY_FETCH_SUCCESS\",\n        payload: {\n          userHistory: data.history,\n          userObjects: data.inventory,\n          knownObjects: data.known_objects,\n          brokenObjects: data.broken_objects\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/loots/code/5-phase/reactventure/frontend/src/actions/auth.js"],"names":["signup","userData","dispatch","fetch","method","headers","credentials","body","JSON","stringify","user","then","res","json","data","type","payload","loggedIn","currentUser","login","history","resp","error","alert","push","retrieve","checkLoggedIn","logged_in","logout","save","hist","inventory","knownObjects","brokenObjects","console","log","id","known_objects","broken_objects","userHistory","userObjects"],"mappings":"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","sourcesContent":["export const signup = (userData) => {\n   return dispatch => {\n      fetch(`http://localhost:3000/api/v1/users`, {\n         method: 'POST',\n         headers: {\n            'Content-Type': 'application/json'\n         },\n         credentials: \"include\",\n         body: JSON.stringify({user: userData})\n      })\n      .then(res => res.json())\n      .then(data => dispatch({\n         type: \"AUTH_SUCCESS\",\n         payload: {\n            loggedIn: true,\n            currentUser: data.user\n         }\n      }))\n   }\n}\n\nexport const login = (userData, history) => {\n   return dispatch => {\n      fetch(\"http://localhost:3000/api/v1/sessions\", {\n         method: \"POST\",\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n         credentials: 'include',\n         body: JSON.stringify(userData)\n      })\n      .then(resp => resp.json())\n      .then(data => {\n         if (data.error) {\n            alert(data.error);\n         } else {\n            dispatch({\n               type: \"AUTH_SUCCESS\",\n               payload: {\n                  loggedIn: true,\n                  currentUser: data.user\n               }\n            })\n            history.push('/')\n            retrieve(data.user)\n         }\n      })\n   }\n}\n\nexport const checkLoggedIn = () => {\n   return dispatch => {\n      fetch(`http://localhost:3000/api/v1/logged_in`, {\n         credentials: 'include'\n      })\n      .then(res => res.json())\n      .then(data => dispatch({\n         type: \"AUTH_SUCCESS\",\n         payload: {\n            loggedIn: data.logged_in,\n            currentUser: data.user\n         }\n      }))\n   }\n}\n\nexport const logout = () => {\n   return dispatch => {\n      fetch(`http://localhost:3000/api/v1/logout`, {\n         method: \"DELETE\",\n         credentials: \"include\"\n      })\n      .then(res => res.json())\n      .then(data => dispatch({type: \"LOGOUT_SUCCESS\"}))\n   }\n}\n\nexport const save = (user, hist=[], inventory=[], knownObjects=['crowbar','door','desk','drawer','paper','candle','chest'], brokenObjects=[]) => {\n   console.log('Save action initiated.')\n   return dispatch => {\n      fetch(`http://localhost:3000/api/v1/users/${user.id}`, {\n         method: 'POST',\n         headers: {\n            \"Content-Type\": \"application/json\",\n         },\n         credentials: 'include',\n         body: JSON.stringify({\n            history: hist,\n            inventory: inventory,\n            known_objects: knownObjects,\n            broken_objects: brokenObjects\n         })\n      })\n      .then(res => res.json())\n      .then(data => {\n         \n         dispatch({\n            type: \"USER_HISTORY_FETCH_SUCCESS\",\n            payload: {\n               userHistory: hist,\n               userObjects: inventory,\n               knownObjects,\n               brokenObjects\n            }\n         })\n      })\n   }\n}\n\nexport const retrieve = (user) => {\n   console.log('Retrieve initiated.')\n   return dispatch => {\n      fetch(`http://localhost:3000/api/v1/users/${user.id}`, {\n         method: 'GET',\n         headers: {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": true\n         },\n         credentials: 'include'\n      })\n      .then(res => res.json())\n      .then(data => {\n         console.log(data)\n         dispatch({\n            type: \"USER_HISTORY_FETCH_SUCCESS\",\n            payload: {\n               userHistory: data.history,\n               userObjects: data.inventory,\n               knownObjects: data.known_objects,\n               brokenObjects: data.broken_objects\n            }\n         })\n      })\n   }\n}\n"]},"metadata":{},"sourceType":"module"}